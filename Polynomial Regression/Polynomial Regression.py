{
    "metadata": {
        "kernelspec": {
            "name": "python3",
            "display_name": "Python 3 (ipykernel)",
            "language": "python"
        },
        "language_info": {
            "name": "python",
            "version": "3.8.10",
            "mimetype": "text/x-python",
            "codemirror_mode": {
                "name": "ipython",
                "version": 3
            },
            "pygments_lexer": "ipython3",
            "nbconvert_exporter": "python",
            "file_extension": ".py"
        }
    },
    "nbformat_minor": 2,
    "nbformat": 4,
    "cells": [
        {
            "cell_type": "code",
            "source": [
                "import pandas as pd\r\n",
                "import numpy as np\r\n",
                "import matplotlib.pyplot as plt"
            ],
            "metadata": {
                "azdata_cell_guid": "b74cd7be-3d3d-453d-a4ad-97460fc39de4",
                "language": "python"
            },
            "outputs": [],
            "execution_count": 61
        },
        {
            "cell_type": "code",
            "source": [
                "df = pd.read_excel(r'C:\\Users\\ITS\\Desktop\\ML\\Polynomial Regression\\ZrO2-R1.xlsx')\r\n",
                "df"
            ],
            "metadata": {
                "language": "python",
                "azdata_cell_guid": "6caf6ad3-6a50-4779-9b1a-c3f629f86e4f"
            },
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 62,
                    "data": {
                        "text/plain": "      WL          R\n0    380  12.078770\n1    381  11.826804\n2    382  12.090058\n3    383  12.329763\n4    384  12.224075\n..   ...        ...\n396  776  17.688067\n397  777  17.726148\n398  778  17.669751\n399  779  17.647554\n400  780  17.639459\n\n[401 rows x 2 columns]",
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>WL</th>\n      <th>R</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>380</td>\n      <td>12.078770</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>381</td>\n      <td>11.826804</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>382</td>\n      <td>12.090058</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>383</td>\n      <td>12.329763</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>384</td>\n      <td>12.224075</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>396</th>\n      <td>776</td>\n      <td>17.688067</td>\n    </tr>\n    <tr>\n      <th>397</th>\n      <td>777</td>\n      <td>17.726148</td>\n    </tr>\n    <tr>\n      <th>398</th>\n      <td>778</td>\n      <td>17.669751</td>\n    </tr>\n    <tr>\n      <th>399</th>\n      <td>779</td>\n      <td>17.647554</td>\n    </tr>\n    <tr>\n      <th>400</th>\n      <td>780</td>\n      <td>17.639459</td>\n    </tr>\n  </tbody>\n</table>\n<p>401 rows Ã— 2 columns</p>\n</div>"
                    },
                    "metadata": {}
                }
            ],
            "execution_count": 62
        },
        {
            "cell_type": "code",
            "source": [
                "df.isna().sum()"
            ],
            "metadata": {
                "language": "python",
                "azdata_cell_guid": "e11c23da-b473-425a-8d44-44bde6ac8b44"
            },
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 63,
                    "data": {
                        "text/plain": "WL    0\nR     0\ndtype: int64"
                    },
                    "metadata": {}
                }
            ],
            "execution_count": 63
        },
        {
            "cell_type": "code",
            "source": [
                "df.duplicated().sum()"
            ],
            "metadata": {
                "language": "python",
                "azdata_cell_guid": "9e53d003-50a3-4d89-97c0-703c85cce70c"
            },
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 64,
                    "data": {
                        "text/plain": "0"
                    },
                    "metadata": {}
                }
            ],
            "execution_count": 64
        },
        {
            "cell_type": "code",
            "source": [
                "df.describe()"
            ],
            "metadata": {
                "language": "python",
                "azdata_cell_guid": "12937347-1c1b-40ba-a095-f762a947a357"
            },
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 65,
                    "data": {
                        "text/plain": "               WL           R\ncount  401.000000  401.000000\nmean   580.000000   18.558105\nstd    115.902977    1.891551\nmin    380.000000   11.826804\n25%    480.000000   18.041187\n50%    580.000000   19.165058\n75%    680.000000   19.931663\nmax    780.000000   20.320212",
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>WL</th>\n      <th>R</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>401.000000</td>\n      <td>401.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>580.000000</td>\n      <td>18.558105</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>115.902977</td>\n      <td>1.891551</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>380.000000</td>\n      <td>11.826804</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>480.000000</td>\n      <td>18.041187</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>580.000000</td>\n      <td>19.165058</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>680.000000</td>\n      <td>19.931663</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>780.000000</td>\n      <td>20.320212</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
                    },
                    "metadata": {}
                }
            ],
            "execution_count": 65
        },
        {
            "cell_type": "code",
            "source": [
                "X = np.array(df['WL']).reshape(-1,1)\r\n",
                "y = df['R']"
            ],
            "metadata": {
                "language": "python",
                "azdata_cell_guid": "32f080bb-d5ba-47ad-bacf-078f8324dae4"
            },
            "outputs": [],
            "execution_count": 66
        },
        {
            "cell_type": "code",
            "source": [
                "plt.scatter(X,y,color = 'red')\r\n",
                "plt.xlabel('WL')\r\n",
                "plt.ylabel('R')\r\n",
                "plt.grid()"
            ],
            "metadata": {
                "language": "python",
                "azdata_cell_guid": "4fa3b237-b4a6-4d1c-9f98-5433e1205044"
            },
            "outputs": [
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": "<Figure size 640x480 with 1 Axes>",
                        "image/png": "\n"
                    },
                    "metadata": {}
                }
            ],
            "execution_count": 67
        },
        {
            "cell_type": "code",
            "source": [
                "from sklearn.linear_model import LinearRegression\r\n",
                "model = LinearRegression()\r\n",
                "model.fit(X,y)\r\n",
                "y_pred = model.predict(X)"
            ],
            "metadata": {
                "language": "python",
                "azdata_cell_guid": "a4b16489-fbe0-47b2-a48f-dd4faf0d8940"
            },
            "outputs": [],
            "execution_count": 68
        },
        {
            "cell_type": "code",
            "source": [
                "plt.scatter(X,y,color = 'red')\r\n",
                "plt.plot(X,y_pred, color = 'green')\r\n",
                "plt.xlabel('WL')\r\n",
                "plt.ylabel('R')\r\n",
                "plt.grid()\r\n",
                "plt.legend()"
            ],
            "metadata": {
                "language": "python",
                "azdata_cell_guid": "ea41a0d1-a196-4d1d-8bc8-e8c6266a8877"
            },
            "outputs": [
                {
                    "output_type": "stream",
                    "name": "stderr",
                    "text": "No artists with labels found to put in legend.  Note that artists whose label start with an underscore are ignored when legend() is called with no argument.\n"
                },
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": "<Figure size 640x480 with 1 Axes>",
                        "image/png": "\n"
                    },
                    "metadata": {}
                },
                {
                    "output_type": "execute_result",
                    "execution_count": 69,
                    "data": {
                        "text/plain": "<matplotlib.legend.Legend at 0x1f636985520>"
                    },
                    "metadata": {}
                }
            ],
            "execution_count": 69
        },
        {
            "cell_type": "code",
            "source": [
                "from sklearn.metrics import r2_score\r\n",
                "Ac=r2_score(X, y_pred)\r\n",
                "print('The accuracy of this model is:R-square=',\"{:.2f}\".format(Ac))"
            ],
            "metadata": {
                "language": "python",
                "azdata_cell_guid": "c553d6a3-5974-4d38-9054-6a59cf2479a8"
            },
            "outputs": [
                {
                    "output_type": "stream",
                    "name": "stdout",
                    "text": "The accuracy of this model is:R-square= -23.51\n"
                }
            ],
            "execution_count": 70
        },
        {
            "cell_type": "code",
            "source": [
                "from sklearn.preprocessing import PolynomialFeatures\r\n",
                "Poly_reg = PolynomialFeatures(degree=5)\r\n",
                "X_poly = Poly_reg.fit_transform(X)"
            ],
            "metadata": {
                "language": "python",
                "azdata_cell_guid": "8d7ef8dc-ca3f-4120-a445-3921d42b506e"
            },
            "outputs": [],
            "execution_count": 71
        },
        {
            "cell_type": "code",
            "source": [
                "model_Pol = LinearRegression() \r\n",
                "model_Pol.fit(X_poly, y)"
            ],
            "metadata": {
                "language": "python",
                "azdata_cell_guid": "cce83110-acd4-45fe-aaa9-8fc9ab2be809"
            },
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 72,
                    "data": {
                        "text/plain": "LinearRegression()",
                        "text/html": "<style>#sk-container-id-4 {color: black;background-color: white;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"
                    },
                    "metadata": {}
                }
            ],
            "execution_count": 72
        },
        {
            "cell_type": "code",
            "source": [
                "y_pred_Pol= model_Pol.predict(X_poly)"
            ],
            "metadata": {
                "language": "python",
                "azdata_cell_guid": "55a271e6-c4ff-458f-8ed6-a15b54d52d8a"
            },
            "outputs": [],
            "execution_count": 73
        },
        {
            "cell_type": "code",
            "source": [
                "model_Pol.coef_"
            ],
            "metadata": {
                "language": "python",
                "azdata_cell_guid": "7e69fc30-cb5d-45b5-8ac8-0d63b9a4056b"
            },
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 74,
                    "data": {
                        "text/plain": "array([ 0.00000000e+00,  1.37940409e+00, -3.05238112e-03,  3.08857929e-06,\n       -1.31748066e-09,  1.22346577e-13])"
                    },
                    "metadata": {}
                }
            ],
            "execution_count": 74
        },
        {
            "cell_type": "code",
            "source": [
                "model_Pol.intercept_"
            ],
            "metadata": {
                "language": "python",
                "azdata_cell_guid": "b26fbb55-7788-4d01-9e63-4b97ff158b74"
            },
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 75,
                    "data": {
                        "text/plain": "-214.5974936958474"
                    },
                    "metadata": {}
                }
            ],
            "execution_count": 75
        },
        {
            "cell_type": "code",
            "source": [
                "plt.xlabel('Cáº¥p báº­c',fontsize=12)\r\n",
                "plt.ylabel('LÆ°Æ¡ng (1000$)',fontsize=12)\r\n",
                "plt.scatter(X, y, color='blue', marker='o')\r\n",
                "plt.plot(X,y_pred_Pol, color='red')\r\n",
                "plt.grid()"
            ],
            "metadata": {
                "language": "python",
                "azdata_cell_guid": "4b270b4b-117c-4f8a-9f02-3ebb18331435"
            },
            "outputs": [
                {
                    "output_type": "display_data",
                    "data": {
                        "text/plain": "<Figure size 640x480 with 1 Axes>",
                        "image/png": "\n"
                    },
                    "metadata": {}
                }
            ],
            "execution_count": 76
        },
        {
            "cell_type": "code",
            "source": [
                "Ac=r2_score(y, y_pred_Pol)\r\n",
                "print('The accuracy of this model is:R-square=',\"{:.2f}\".format(Ac))"
            ],
            "metadata": {
                "language": "python",
                "azdata_cell_guid": "2a2740b3-bc62-4620-8ffd-d147bea31397"
            },
            "outputs": [
                {
                    "output_type": "stream",
                    "name": "stdout",
                    "text": "The accuracy of this model is:R-square= 1.00\n"
                }
            ],
            "execution_count": 77
        },
        {
            "cell_type": "code",
            "source": [
                "from sklearn.metrics import mean_absolute_error\r\n",
                "mae = mean_absolute_error(y, y_pred_Pol)\r\n",
                "mae"
            ],
            "metadata": {
                "language": "python",
                "azdata_cell_guid": "7365139c-c1ea-4de4-a39e-8f27ca585ce7"
            },
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 78,
                    "data": {
                        "text/plain": "0.04210991620213659"
                    },
                    "metadata": {}
                }
            ],
            "execution_count": 78
        },
        {
            "cell_type": "code",
            "source": [
                "from sklearn.metrics import mean_squared_error\r\n",
                "import math"
            ],
            "metadata": {
                "language": "python",
                "azdata_cell_guid": "27153122-e8cb-4243-85e5-cf014ab7eecb"
            },
            "outputs": [],
            "execution_count": 79
        },
        {
            "cell_type": "code",
            "source": [
                "rmse=math.sqrt(mean_squared_error(y, y_pred_Pol))\r\n",
                "rmse"
            ],
            "metadata": {
                "language": "python",
                "azdata_cell_guid": "1c12f890-6238-400b-8d03-6e15bed3a4a5"
            },
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 80,
                    "data": {
                        "text/plain": "0.06361223216003904"
                    },
                    "metadata": {}
                }
            ],
            "execution_count": 80
        }
    ]
}